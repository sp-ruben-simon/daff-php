<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ 3988422)
 */

use \php\Boot;

final class Date {
	/**
	 * @var float
	 */
	public $__t;


	/**
	 * @param float $t
	 * 
	 * @return Date
	 */
	static public function fromPhpTime ($t) {
		#/usr/local/lib/haxe/std/php/_std/Date.hx:80: characters 3-41
		$d = new Date(2000, 1, 1, 0, 0, 0);
		#/usr/local/lib/haxe/std/php/_std/Date.hx:81: characters 3-12
		$d->__t = $t;
		#/usr/local/lib/haxe/std/php/_std/Date.hx:82: characters 3-11
		return $d;
	}


	/**
	 * @param string $s
	 * 
	 * @return Date
	 */
	static public function fromString ($s) {
		#/usr/local/lib/haxe/std/php/_std/Date.hx:92: characters 3-35
		return Date::fromPhpTime(strtotime($s));
	}


	/**
	 * @param float $t
	 * 
	 * @return Date
	 */
	static public function fromTime ($t) {
		#/usr/local/lib/haxe/std/php/_std/Date.hx:86: characters 3-41
		$d = new Date(2000, 1, 1, 0, 0, 0);
		#/usr/local/lib/haxe/std/php/_std/Date.hx:87: characters 3-19
		$d->__t = $t / 1000;
		#/usr/local/lib/haxe/std/php/_std/Date.hx:88: characters 3-11
		return $d;
	}


	/**
	 * @return Date
	 */
	static public function now () {
		#/usr/local/lib/haxe/std/php/_std/Date.hx:76: characters 3-48
		return Date::fromPhpTime(round(microtime(true), 3));
	}


	/**
	 * @param int $year
	 * @param int $month
	 * @param int $day
	 * @param int $hour
	 * @param int $min
	 * @param int $sec
	 * 
	 * @return void
	 */
	public function __construct ($year, $month, $day, $hour, $min, $sec) {
		#/usr/local/lib/haxe/std/php/_std/Date.hx:31: characters 3-53
		$this->__t = mktime($hour, $min, $sec, $month + 1, $day, $year);
	}


	/**
	 * @return string
	 */
	public function toString () {
		#/usr/local/lib/haxe/std/php/_std/Date.hx:72: characters 3-39
		return date("Y-m-d H:i:s", (int)($this->__t));
	}


	public function __toString() {
		return $this->toString();
	}
}


Boot::registerClass(Date::class, 'Date');
