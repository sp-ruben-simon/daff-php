<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ 3988422)
 */

namespace haxe\ds;

use \php\Boot;
use \haxe\ds\_List\ListIterator;
use \haxe\ds\_List\ListNode;

class List_hx {
	/**
	 * @var ListNode
	 */
	public $h;
	/**
	 * @var int
	 */
	public $length;
	/**
	 * @var ListNode
	 */
	public $q;


	/**
	 * @return void
	 */
	public function __construct () {
		#/usr/local/lib/haxe/std/haxe/ds/List.hx:45: characters 3-13
		$this->length = 0;
	}


	/**
	 * @param mixed $item
	 * 
	 * @return void
	 */
	public function add ($item) {
		#/usr/local/lib/haxe/std/haxe/ds/List.hx:54: characters 3-39
		$x = new ListNode($item, null);
		#/usr/local/lib/haxe/std/haxe/ds/List.hx:55: lines 55-58
		if ($this->h === null) {
			#/usr/local/lib/haxe/std/haxe/ds/List.hx:56: characters 4-9
			$this->h = $x;
		} else {
			#/usr/local/lib/haxe/std/haxe/ds/List.hx:58: characters 4-14
			$this->q->next = $x;
		}
		#/usr/local/lib/haxe/std/haxe/ds/List.hx:59: characters 3-8
		$this->q = $x;
		#/usr/local/lib/haxe/std/haxe/ds/List.hx:60: characters 3-11
		$this->length++;
	}


	/**
	 * @return ListIterator
	 */
	public function iterator () {
		#/usr/local/lib/haxe/std/haxe/ds/List.hx:162: characters 3-32
		return new ListIterator($this->h);
	}
}


Boot::registerClass(List_hx::class, 'haxe.ds.List');
