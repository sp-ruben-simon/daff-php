<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ 3988422)
 */

namespace haxe\io;

use \php\Boot;
use \php\_Boot\HxEnum;

class Error extends HxEnum {
	/**
	 * @return Error
	 */
	static public function Blocked () {
		static $inst = null;
		if (!$inst) $inst = new Error('Blocked', 0, []);
		return $inst;
	}


	/**
	 * @param mixed $e
	 * 
	 * @return Error
	 */
	static public function Custom ($e) {
		return new Error('Custom', 3, [$e]);
	}


	/**
	 * @return Error
	 */
	static public function OutsideBounds () {
		static $inst = null;
		if (!$inst) $inst = new Error('OutsideBounds', 2, []);
		return $inst;
	}


	/**
	 * @return Error
	 */
	static public function Overflow () {
		static $inst = null;
		if (!$inst) $inst = new Error('Overflow', 1, []);
		return $inst;
	}


	/**
	 * Returns array of (constructorIndex => constructorName)
	 *
	 * @return string[]
	 */
	static public function __hx__list () {
		return [
			0 => 'Blocked',
			3 => 'Custom',
			2 => 'OutsideBounds',
			1 => 'Overflow',
		];
	}


	/**
	 * Returns array of (constructorName => parametersCount)
	 *
	 * @return int[]
	 */
	static public function __hx__paramsCount () {
		return [
			'Blocked' => 0,
			'Custom' => 1,
			'OutsideBounds' => 0,
			'Overflow' => 0,
		];
	}
}


Boot::registerClass(Error::class, 'haxe.io.Error');
