<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ 3988422)
 */

namespace coopy;

use \php\Boot;

class IndexItem {
	/**
	 * @var \Array_hx
	 */
	public $lst;


	/**
	 * @return void
	 */
	public function __construct () {
	}


	/**
	 * @param int $i
	 * 
	 * @return int
	 */
	public function add ($i) {
		#coopy/IndexItem.hx:27: characters 9-46
		if ($this->lst === null) {
			#coopy/IndexItem.hx:27: characters 24-46
			$this->lst = new \Array_hx();
		}
		#coopy/IndexItem.hx:28: characters 9-20
		$_this = $this->lst;
		#coopy/IndexItem.hx:28: characters 9-20
		$_this->arr[$_this->length] = $i;
		#coopy/IndexItem.hx:28: characters 9-20
		++$_this->length;

		#coopy/IndexItem.hx:29: characters 9-26
		return $this->lst->length;
	}


	/**
	 * @return \Array_hx
	 */
	public function asList () {
		#coopy/IndexItem.hx:56: characters 9-19
		return $this->lst;
	}


	/**
	 * @return int
	 */
	public function length () {
		#coopy/IndexItem.hx:38: characters 9-26
		return $this->lst->length;
	}


	/**
	 * @return int
	 */
	public function value () {
		#coopy/IndexItem.hx:47: characters 9-22
		return ($this->lst->arr[0] ?? null);
	}
}


Boot::registerClass(IndexItem::class, 'coopy.IndexItem');
