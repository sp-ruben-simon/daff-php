<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ 3988422)
 */

namespace coopy;

use \haxe\ds\StringMap;
use \php\Boot;
use \php\_Boot\HxException;

class SqlCompare {
	/**
	 * @var Alignment
	 */
	public $align;
	/**
	 * @var SqlTable
	 */
	public $alt;
	/**
	 * @var bool
	 */
	public $alt_peered;
	/**
	 * @var int
	 */
	public $at0;
	/**
	 * @var int
	 */
	public $at1;
	/**
	 * @var int
	 */
	public $at2;
	/**
	 * @var SqlDatabase
	 */
	public $db;
	/**
	 * @var int
	 */
	public $diff_ct;
	/**
	 * @var SqlTable
	 */
	public $local;
	/**
	 * @var \Array_hx
	 */
	public $needed;
	/**
	 * @var bool
	 */
	public $peered;
	/**
	 * @var SqlTable
	 */
	public $remote;


	/**
	 * @param SqlDatabase $db
	 * @param SqlTable $local
	 * @param SqlTable $remote
	 * @param SqlTable $alt
	 * @param Alignment $align
	 * 
	 * @return void
	 */
	public function __construct ($db, $local, $remote, $alt, $align = null) {
		#coopy/SqlCompare.hx:24: characters 9-21
		$this->db = $db;
		#coopy/SqlCompare.hx:25: characters 9-27
		$this->local = $local;
		#coopy/SqlCompare.hx:26: characters 9-29
		$this->remote = $remote;
		#coopy/SqlCompare.hx:27: characters 9-23
		$this->alt = $alt;
		#coopy/SqlCompare.hx:28: characters 9-27
		$this->align = $align;
		#coopy/SqlCompare.hx:29: characters 9-23
		$this->peered = false;
		#coopy/SqlCompare.hx:30: characters 9-27
		$this->alt_peered = false;
		#coopy/SqlCompare.hx:31: lines 31-39
		if (($local !== null) && ($remote !== null)) {
			#coopy/SqlCompare.hx:32: lines 32-38
			if ($this->remote->getDatabase()->getNameForAttachment() !== null) {
				#coopy/SqlCompare.hx:33: lines 33-37
				if ($this->remote->getDatabase()->getNameForAttachment() !== $this->local->getDatabase()->getNameForAttachment()) {
					#coopy/SqlCompare.hx:35: characters 21-123
					$local->getDatabase()->getHelper()->attach($db, "__peer__", $this->remote->getDatabase()->getNameForAttachment());
					#coopy/SqlCompare.hx:36: characters 21-34
					$this->peered = true;
				}
			}
		}
		#coopy/SqlCompare.hx:40: lines 40-48
		if (($this->alt !== null) && ($local !== null)) {
			#coopy/SqlCompare.hx:41: lines 41-47
			if ($this->alt->getDatabase()->getNameForAttachment() !== null) {
				#coopy/SqlCompare.hx:42: lines 42-46
				if ($this->alt->getDatabase()->getNameForAttachment() !== $this->local->getDatabase()->getNameForAttachment()) {
					#coopy/SqlCompare.hx:44: characters 21-119
					$local->getDatabase()->getHelper()->attach($db, "__alt__", $this->alt->getDatabase()->getNameForAttachment());
					#coopy/SqlCompare.hx:45: characters 21-38
					$this->alt_peered = true;
				}
			}
		}
	}


	/**
	 * @return Alignment
	 */
	public function apply () {
		#coopy/SqlCompare.hx:203: characters 9-34
		if ($this->db === null) {
			#coopy/SqlCompare.hx:203: characters 23-34
			return null;
		}
		#coopy/SqlCompare.hx:205: characters 9-49
		if ($this->align === null) {
			#coopy/SqlCompare.hx:205: characters 26-31
			$this->align = new Alignment();
		}
		#coopy/SqlCompare.hx:207: characters 9-43
		if (!$this->validateSchema()) {
			#coopy/SqlCompare.hx:207: characters 32-43
			return null;
		}
		#coopy/SqlCompare.hx:209: characters 9-46
		$rowid_name = $this->db->rowid();
		#coopy/SqlCompare.hx:211: characters 9-27
		$key_cols = new \Array_hx();
		#coopy/SqlCompare.hx:212: characters 9-28
		$data_cols = new \Array_hx();
		#coopy/SqlCompare.hx:213: characters 9-27
		$all_cols = new \Array_hx();
		#coopy/SqlCompare.hx:214: characters 9-28
		$all_cols1 = new \Array_hx();
		#coopy/SqlCompare.hx:215: characters 9-28
		$all_cols2 = new \Array_hx();
		#coopy/SqlCompare.hx:216: characters 9-28
		$all_cols3 = new \Array_hx();
		#coopy/SqlCompare.hx:217: characters 9-39
		$common = $this->local;
		#coopy/SqlCompare.hx:219: lines 219-224
		if ($this->local !== null) {
			#coopy/SqlCompare.hx:220: characters 13-21
			$key_cols = $this->local->getPrimaryKey();
			#coopy/SqlCompare.hx:221: characters 13-22
			$data_cols = $this->local->getAllButPrimaryKey();
			#coopy/SqlCompare.hx:222: characters 13-21
			$all_cols = $this->local->getColumnNames();
			#coopy/SqlCompare.hx:223: characters 13-22
			$all_cols1 = $this->local->getColumnNames();
		}
		#coopy/SqlCompare.hx:226: lines 226-229
		if ($this->remote !== null) {
			#coopy/SqlCompare.hx:227: characters 13-22
			$all_cols2 = $this->remote->getColumnNames();
			#coopy/SqlCompare.hx:228: characters 13-46
			if ($common === null) {
				#coopy/SqlCompare.hx:228: characters 31-37
				$common = $this->remote;
			}
		}
		#coopy/SqlCompare.hx:231: lines 231-236
		if ($this->alt !== null) {
			#coopy/SqlCompare.hx:232: characters 13-22
			$all_cols3 = $this->alt->getColumnNames();
			#coopy/SqlCompare.hx:233: characters 13-43
			if ($common === null) {
				#coopy/SqlCompare.hx:233: characters 31-37
				$common = $this->alt;
			}
		} else {
			#coopy/SqlCompare.hx:235: characters 13-22
			$all_cols3 = $all_cols2;
		}
		#coopy/SqlCompare.hx:238: characters 9-51
		$all_common_cols = new \Array_hx();
		#coopy/SqlCompare.hx:239: characters 9-52
		$data_common_cols = new \Array_hx();
		#coopy/SqlCompare.hx:241: characters 9-46
		$present1 = new StringMap();
		#coopy/SqlCompare.hx:242: characters 9-46
		$present2 = new StringMap();
		#coopy/SqlCompare.hx:243: characters 9-46
		$present3 = new StringMap();
		#coopy/SqlCompare.hx:244: characters 31-52
		$this1 = [];
		#coopy/SqlCompare.hx:244: characters 31-52
		$present_primary_data = $this1;
		#coopy/SqlCompare.hx:245: characters 9-36
		$has_column_add = false;
		#coopy/SqlCompare.hx:247: lines 247-249
		$_g1 = 0;
		#coopy/SqlCompare.hx:247: lines 247-249
		$_g = $key_cols->length;
		#coopy/SqlCompare.hx:247: lines 247-249
		while ($_g1 < $_g) {
			#coopy/SqlCompare.hx:247: lines 247-249
			$_g1 = $_g1 + 1;
			#coopy/SqlCompare.hx:247: characters 14-15
			$i = $_g1 - 1;
			#coopy/SqlCompare.hx:248: characters 13-47
			$present_primary_data[$key_cols[$i]] = $i;
		}

		#coopy/SqlCompare.hx:250: lines 250-253
		$_g11 = 0;
		#coopy/SqlCompare.hx:250: lines 250-253
		$_g2 = $all_cols1->length;
		#coopy/SqlCompare.hx:250: lines 250-253
		while ($_g11 < $_g2) {
			#coopy/SqlCompare.hx:250: lines 250-253
			$_g11 = $_g11 + 1;
			#coopy/SqlCompare.hx:250: characters 14-15
			$i1 = $_g11 - 1;
			#coopy/SqlCompare.hx:251: characters 13-36
			$key = ($all_cols1->arr[$i1] ?? null);
			#coopy/SqlCompare.hx:252: characters 13-32
			$present1->data[$key] = $i1;
		}

		#coopy/SqlCompare.hx:254: lines 254-260
		$_g12 = 0;
		#coopy/SqlCompare.hx:254: lines 254-260
		$_g3 = $all_cols2->length;
		#coopy/SqlCompare.hx:254: lines 254-260
		while ($_g12 < $_g3) {
			#coopy/SqlCompare.hx:254: lines 254-260
			$_g12 = $_g12 + 1;
			#coopy/SqlCompare.hx:254: characters 14-15
			$i2 = $_g12 - 1;
			#coopy/SqlCompare.hx:255: characters 13-36
			$key1 = ($all_cols2->arr[$i2] ?? null);
			#coopy/SqlCompare.hx:256: lines 256-258
			if (!array_key_exists($key1, $present1->data)) {
				#coopy/SqlCompare.hx:257: characters 17-31
				$has_column_add = true;
			}
			#coopy/SqlCompare.hx:259: characters 13-32
			$present2->data[$key1] = $i2;
		}

		#coopy/SqlCompare.hx:261: lines 261-275
		$_g13 = 0;
		#coopy/SqlCompare.hx:261: lines 261-275
		$_g4 = $all_cols3->length;
		#coopy/SqlCompare.hx:261: lines 261-275
		while ($_g13 < $_g4) {
			#coopy/SqlCompare.hx:261: lines 261-275
			$_g13 = $_g13 + 1;
			#coopy/SqlCompare.hx:261: characters 14-15
			$i3 = $_g13 - 1;
			#coopy/SqlCompare.hx:262: characters 13-36
			$key2 = ($all_cols3->arr[$i3] ?? null);
			#coopy/SqlCompare.hx:263: lines 263-265
			if (!array_key_exists($key2, $present1->data)) {
				#coopy/SqlCompare.hx:264: characters 17-31
				$has_column_add = true;
			}
			#coopy/SqlCompare.hx:266: characters 13-32
			$present3->data[$key2] = $i3;
			#coopy/SqlCompare.hx:267: lines 267-274
			if (array_key_exists($key2, $present1->data)) {
				#coopy/SqlCompare.hx:268: lines 268-273
				if (array_key_exists($key2, $present2->data)) {
					#coopy/SqlCompare.hx:269: characters 21-46
					$all_common_cols->arr[$all_common_cols->length] = $key2;
					#coopy/SqlCompare.hx:269: characters 21-46
					++$all_common_cols->length;

					#coopy/SqlCompare.hx:270: lines 270-272
					if (!array_key_exists($key2, $present_primary_data)) {
						#coopy/SqlCompare.hx:271: characters 25-51
						$data_common_cols->arr[$data_common_cols->length] = $key2;
						#coopy/SqlCompare.hx:271: characters 25-51
						++$data_common_cols->length;
					}
				}
			}
		}

		#coopy/SqlCompare.hx:277: characters 9-19
		$this->align->meta = new Alignment();
		#coopy/SqlCompare.hx:278: lines 278-285
		$_g14 = 0;
		#coopy/SqlCompare.hx:278: lines 278-285
		$_g5 = $all_cols1->length;
		#coopy/SqlCompare.hx:278: lines 278-285
		while ($_g14 < $_g5) {
			#coopy/SqlCompare.hx:278: lines 278-285
			$_g14 = $_g14 + 1;
			#coopy/SqlCompare.hx:278: characters 14-15
			$i4 = $_g14 - 1;
			#coopy/SqlCompare.hx:279: characters 13-36
			$key3 = ($all_cols1->arr[$i4] ?? null);
			#coopy/SqlCompare.hx:280: lines 280-284
			if (array_key_exists($key3, $present2->data)) {
				#coopy/SqlCompare.hx:281: characters 17-53
				$this->align->meta->link($i4, ($present2->data[$key3] ?? null));
			} else {
				#coopy/SqlCompare.hx:283: characters 17-38
				$this->align->meta->link($i4, -1);
			}
		}

		#coopy/SqlCompare.hx:286: lines 286-291
		$_g15 = 0;
		#coopy/SqlCompare.hx:286: lines 286-291
		$_g6 = $all_cols2->length;
		#coopy/SqlCompare.hx:286: lines 286-291
		while ($_g15 < $_g6) {
			#coopy/SqlCompare.hx:286: lines 286-291
			$_g15 = $_g15 + 1;
			#coopy/SqlCompare.hx:286: characters 14-15
			$i5 = $_g15 - 1;
			#coopy/SqlCompare.hx:287: characters 13-36
			$key4 = ($all_cols2->arr[$i5] ?? null);
			#coopy/SqlCompare.hx:288: lines 288-290
			if (!array_key_exists($key4, $present1->data)) {
				#coopy/SqlCompare.hx:289: characters 17-38
				$this->align->meta->link(-1, $i5);
			}
		}

		#coopy/SqlCompare.hx:292: characters 9-74
		$this->scanColumns($all_cols1, $all_cols2, $key_cols, $present1, $present2, $this->align);
		#coopy/SqlCompare.hx:293: characters 9-35
		$this->align->tables($this->local, $this->remote);
		#coopy/SqlCompare.hx:294: lines 294-297
		if ($this->alt !== null) {
			#coopy/SqlCompare.hx:295: characters 13-88
			$this->scanColumns($all_cols1, $all_cols3, $key_cols, $present1, $present3, $this->align->reference);
			#coopy/SqlCompare.hx:296: characters 13-46
			$this->align->reference->tables($this->local, $this->alt);
		}
		#coopy/SqlCompare.hx:299: characters 9-29
		$sql_table1 = "";
		#coopy/SqlCompare.hx:300: characters 9-29
		$sql_table2 = "";
		#coopy/SqlCompare.hx:301: characters 9-29
		$sql_table3 = "";
		#coopy/SqlCompare.hx:302: lines 302-304
		if ($this->local !== null) {
			#coopy/SqlCompare.hx:303: characters 13-23
			$sql_table1 = $this->local->getQuotedTableName();
		}
		#coopy/SqlCompare.hx:305: lines 305-307
		if ($this->remote !== null) {
			#coopy/SqlCompare.hx:306: characters 13-23
			$sql_table2 = $this->remote->getQuotedTableName();
		}
		#coopy/SqlCompare.hx:308: lines 308-310
		if ($this->alt !== null) {
			#coopy/SqlCompare.hx:309: characters 13-23
			$sql_table3 = $this->alt->getQuotedTableName();
		}
		#coopy/SqlCompare.hx:311: lines 311-315
		if ($this->peered) {
			#coopy/SqlCompare.hx:313: characters 13-23
			$sql_table1 = "main." . ($sql_table1??'null');
			#coopy/SqlCompare.hx:314: characters 13-23
			$sql_table2 = "__peer__." . ($sql_table2??'null');
		}
		#coopy/SqlCompare.hx:316: lines 316-318
		if ($this->alt_peered) {
			#coopy/SqlCompare.hx:317: characters 13-23
			$sql_table2 = "__alt__." . ($sql_table3??'null');
		}
		#coopy/SqlCompare.hx:319: characters 9-39
		$sql_key_cols = "";
		#coopy/SqlCompare.hx:320: lines 320-323
		$_g16 = 0;
		#coopy/SqlCompare.hx:320: lines 320-323
		$_g7 = $key_cols->length;
		#coopy/SqlCompare.hx:320: lines 320-323
		while ($_g16 < $_g7) {
			#coopy/SqlCompare.hx:320: lines 320-323
			$_g16 = $_g16 + 1;
			#coopy/SqlCompare.hx:320: characters 14-15
			$i6 = $_g16 - 1;
			#coopy/SqlCompare.hx:321: characters 13-41
			if ($i6 > 0) {
				#coopy/SqlCompare.hx:321: characters 22-41
				$sql_key_cols = ($sql_key_cols??'null') . ",";
			}
			#coopy/SqlCompare.hx:322: characters 13-68
			$sql_key_cols = ($sql_key_cols??'null') . ($common->getQuotedColumnName(($key_cols->arr[$i6] ?? null))??'null');
		}

		#coopy/SqlCompare.hx:324: characters 9-39
		$sql_all_cols = "";
		#coopy/SqlCompare.hx:325: lines 325-328
		$_g17 = 0;
		#coopy/SqlCompare.hx:325: lines 325-328
		$_g8 = $all_common_cols->length;
		#coopy/SqlCompare.hx:325: lines 325-328
		while ($_g17 < $_g8) {
			#coopy/SqlCompare.hx:325: lines 325-328
			$_g17 = $_g17 + 1;
			#coopy/SqlCompare.hx:325: characters 14-15
			$i7 = $_g17 - 1;
			#coopy/SqlCompare.hx:326: characters 13-41
			if ($i7 > 0) {
				#coopy/SqlCompare.hx:326: characters 22-41
				$sql_all_cols = ($sql_all_cols??'null') . ",";
			}
			#coopy/SqlCompare.hx:327: characters 13-75
			$sql_all_cols = ($sql_all_cols??'null') . ($common->getQuotedColumnName(($all_common_cols->arr[$i7] ?? null))??'null');
		}

		#coopy/SqlCompare.hx:329: characters 9-40
		$sql_all_cols1 = "";
		#coopy/SqlCompare.hx:330: lines 330-333
		$_g18 = 0;
		#coopy/SqlCompare.hx:330: lines 330-333
		$_g9 = $all_cols1->length;
		#coopy/SqlCompare.hx:330: lines 330-333
		while ($_g18 < $_g9) {
			#coopy/SqlCompare.hx:330: lines 330-333
			$_g18 = $_g18 + 1;
			#coopy/SqlCompare.hx:330: characters 14-15
			$i8 = $_g18 - 1;
			#coopy/SqlCompare.hx:331: characters 13-42
			if ($i8 > 0) {
				#coopy/SqlCompare.hx:331: characters 22-42
				$sql_all_cols1 = ($sql_all_cols1??'null') . ",";
			}
			#coopy/SqlCompare.hx:332: characters 13-69
			$sql_all_cols1 = ($sql_all_cols1??'null') . ($this->local->getQuotedColumnName(($all_cols1->arr[$i8] ?? null))??'null');
		}

		#coopy/SqlCompare.hx:334: characters 9-40
		$sql_all_cols2 = "";
		#coopy/SqlCompare.hx:335: lines 335-338
		$_g19 = 0;
		#coopy/SqlCompare.hx:335: lines 335-338
		$_g10 = $all_cols2->length;
		#coopy/SqlCompare.hx:335: lines 335-338
		while ($_g19 < $_g10) {
			#coopy/SqlCompare.hx:335: lines 335-338
			$_g19 = $_g19 + 1;
			#coopy/SqlCompare.hx:335: characters 14-15
			$i9 = $_g19 - 1;
			#coopy/SqlCompare.hx:336: characters 13-42
			if ($i9 > 0) {
				#coopy/SqlCompare.hx:336: characters 22-42
				$sql_all_cols2 = ($sql_all_cols2??'null') . ",";
			}
			#coopy/SqlCompare.hx:337: characters 13-70
			$sql_all_cols2 = ($sql_all_cols2??'null') . ($this->remote->getQuotedColumnName(($all_cols2->arr[$i9] ?? null))??'null');
		}

		#coopy/SqlCompare.hx:339: characters 9-40
		$sql_all_cols3 = "";
		#coopy/SqlCompare.hx:340: lines 340-345
		if ($this->alt !== null) {
			#coopy/SqlCompare.hx:341: lines 341-344
			$_g110 = 0;
			#coopy/SqlCompare.hx:341: lines 341-344
			$_g20 = $all_cols3->length;
			#coopy/SqlCompare.hx:341: lines 341-344
			while ($_g110 < $_g20) {
				#coopy/SqlCompare.hx:341: lines 341-344
				$_g110 = $_g110 + 1;
				#coopy/SqlCompare.hx:341: characters 18-19
				$i10 = $_g110 - 1;
				#coopy/SqlCompare.hx:342: characters 17-46
				if ($i10 > 0) {
					#coopy/SqlCompare.hx:342: characters 26-46
					$sql_all_cols3 = ($sql_all_cols3??'null') . ",";
				}
				#coopy/SqlCompare.hx:343: characters 17-71
				$sql_all_cols3 = ($sql_all_cols3??'null') . ($this->alt->getQuotedColumnName(($all_cols3->arr[$i10] ?? null))??'null');
			}
		}
		#coopy/SqlCompare.hx:346: characters 9-42
		$sql_key_match2 = "";
		#coopy/SqlCompare.hx:347: lines 347-351
		$_g111 = 0;
		#coopy/SqlCompare.hx:347: lines 347-351
		$_g21 = $key_cols->length;
		#coopy/SqlCompare.hx:347: lines 347-351
		while ($_g111 < $_g21) {
			#coopy/SqlCompare.hx:347: lines 347-351
			$_g111 = $_g111 + 1;
			#coopy/SqlCompare.hx:347: characters 14-15
			$i11 = $_g111 - 1;
			#coopy/SqlCompare.hx:348: characters 13-47
			if ($i11 > 0) {
				#coopy/SqlCompare.hx:348: characters 22-47
				$sql_key_match2 = ($sql_key_match2??'null') . " AND ";
			}
			#coopy/SqlCompare.hx:349: characters 13-70
			$n = $common->getQuotedColumnName(($key_cols->arr[$i11] ?? null));
			#coopy/SqlCompare.hx:350: characters 13-83
			$sql_key_match2 = ($sql_key_match2??'null') . ((($sql_table1??'null') . "." . ($n??'null') . " IS " . ($sql_table2??'null') . "." . ($n??'null'))??'null');
		}

		#coopy/SqlCompare.hx:352: characters 9-42
		$sql_key_match3 = "";
		#coopy/SqlCompare.hx:353: lines 353-359
		if ($this->alt !== null) {
			#coopy/SqlCompare.hx:354: lines 354-358
			$_g112 = 0;
			#coopy/SqlCompare.hx:354: lines 354-358
			$_g22 = $key_cols->length;
			#coopy/SqlCompare.hx:354: lines 354-358
			while ($_g112 < $_g22) {
				#coopy/SqlCompare.hx:354: lines 354-358
				$_g112 = $_g112 + 1;
				#coopy/SqlCompare.hx:354: characters 18-19
				$i12 = $_g112 - 1;
				#coopy/SqlCompare.hx:355: characters 17-51
				if ($i12 > 0) {
					#coopy/SqlCompare.hx:355: characters 26-51
					$sql_key_match3 = ($sql_key_match3??'null') . " AND ";
				}
				#coopy/SqlCompare.hx:356: characters 17-74
				$n1 = $common->getQuotedColumnName(($key_cols->arr[$i12] ?? null));
				#coopy/SqlCompare.hx:357: characters 17-87
				$sql_key_match3 = ($sql_key_match3??'null') . ((($sql_table1??'null') . "." . ($n1??'null') . " IS " . ($sql_table3??'null') . "." . ($n1??'null'))??'null');
			}
		}
		#coopy/SqlCompare.hx:360: characters 9-45
		$sql_data_mismatch = "";
		#coopy/SqlCompare.hx:361: lines 361-365
		$_g113 = 0;
		#coopy/SqlCompare.hx:361: lines 361-365
		$_g23 = $data_common_cols->length;
		#coopy/SqlCompare.hx:361: lines 361-365
		while ($_g113 < $_g23) {
			#coopy/SqlCompare.hx:361: lines 361-365
			$_g113 = $_g113 + 1;
			#coopy/SqlCompare.hx:361: characters 14-15
			$i13 = $_g113 - 1;
			#coopy/SqlCompare.hx:362: characters 13-49
			if ($i13 > 0) {
				#coopy/SqlCompare.hx:362: characters 22-49
				$sql_data_mismatch = ($sql_data_mismatch??'null') . " OR ";
			}
			#coopy/SqlCompare.hx:363: characters 13-78
			$n2 = $common->getQuotedColumnName(($data_common_cols->arr[$i13] ?? null));
			#coopy/SqlCompare.hx:364: characters 13-90
			$sql_data_mismatch = ($sql_data_mismatch??'null') . ((($sql_table1??'null') . "." . ($n2??'null') . " IS NOT " . ($sql_table2??'null') . "." . ($n2??'null'))??'null');
		}

		#coopy/SqlCompare.hx:366: lines 366-373
		$_g114 = 0;
		#coopy/SqlCompare.hx:366: lines 366-373
		$_g24 = $all_cols2->length;
		#coopy/SqlCompare.hx:366: lines 366-373
		while ($_g114 < $_g24) {
			#coopy/SqlCompare.hx:366: lines 366-373
			$_g114 = $_g114 + 1;
			#coopy/SqlCompare.hx:366: characters 14-15
			$i14 = $_g114 - 1;
			#coopy/SqlCompare.hx:367: characters 13-36
			$key5 = ($all_cols2->arr[$i14] ?? null);
			#coopy/SqlCompare.hx:368: lines 368-372
			if (!array_key_exists($key5, $present1->data)) {
				#coopy/SqlCompare.hx:369: characters 17-71
				if ($sql_data_mismatch !== "") {
					#coopy/SqlCompare.hx:369: characters 44-71
					$sql_data_mismatch = ($sql_data_mismatch??'null') . " OR ";
				}
				#coopy/SqlCompare.hx:370: characters 17-66
				$n3 = $common->getQuotedColumnName($key5);
				#coopy/SqlCompare.hx:371: characters 17-75
				$sql_data_mismatch = ($sql_data_mismatch??'null') . ((($sql_table2??'null') . "." . ($n3??'null') . " IS NOT NULL")??'null');
			}
		}

		#coopy/SqlCompare.hx:374: lines 374-388
		if ($this->alt !== null) {
			#coopy/SqlCompare.hx:375: lines 375-379
			$_g115 = 0;
			#coopy/SqlCompare.hx:375: lines 375-379
			$_g25 = $data_common_cols->length;
			#coopy/SqlCompare.hx:375: lines 375-379
			while ($_g115 < $_g25) {
				#coopy/SqlCompare.hx:375: lines 375-379
				$_g115 = $_g115 + 1;
				#coopy/SqlCompare.hx:375: characters 18-19
				$i15 = $_g115 - 1;
				#coopy/SqlCompare.hx:376: characters 17-76
				if (strlen($sql_data_mismatch) > 0) {
					#coopy/SqlCompare.hx:376: characters 49-76
					$sql_data_mismatch = ($sql_data_mismatch??'null') . " OR ";
				}
				#coopy/SqlCompare.hx:377: characters 17-82
				$n4 = $common->getQuotedColumnName(($data_common_cols->arr[$i15] ?? null));
				#coopy/SqlCompare.hx:378: characters 17-94
				$sql_data_mismatch = ($sql_data_mismatch??'null') . ((($sql_table1??'null') . "." . ($n4??'null') . " IS NOT " . ($sql_table3??'null') . "." . ($n4??'null'))??'null');
			}

			#coopy/SqlCompare.hx:380: lines 380-387
			$_g116 = 0;
			#coopy/SqlCompare.hx:380: lines 380-387
			$_g26 = $all_cols3->length;
			#coopy/SqlCompare.hx:380: lines 380-387
			while ($_g116 < $_g26) {
				#coopy/SqlCompare.hx:380: lines 380-387
				$_g116 = $_g116 + 1;
				#coopy/SqlCompare.hx:380: characters 18-19
				$i16 = $_g116 - 1;
				#coopy/SqlCompare.hx:381: characters 17-40
				$key6 = ($all_cols3->arr[$i16] ?? null);
				#coopy/SqlCompare.hx:382: lines 382-386
				if (!array_key_exists($key6, $present1->data)) {
					#coopy/SqlCompare.hx:383: characters 21-75
					if ($sql_data_mismatch !== "") {
						#coopy/SqlCompare.hx:383: characters 48-75
						$sql_data_mismatch = ($sql_data_mismatch??'null') . " OR ";
					}
					#coopy/SqlCompare.hx:384: characters 21-70
					$n5 = $common->getQuotedColumnName($key6);
					#coopy/SqlCompare.hx:385: characters 21-79
					$sql_data_mismatch = ($sql_data_mismatch??'null') . ((($sql_table3??'null') . "." . ($n5??'null') . " IS NOT NULL")??'null');
				}
			}

		}
		#coopy/SqlCompare.hx:389: characters 9-39
		$sql_dbl_cols = "";
		#coopy/SqlCompare.hx:390: characters 9-42
		$dbl_cols = new \Array_hx();
		#coopy/SqlCompare.hx:391: lines 391-397
		$_g117 = 0;
		#coopy/SqlCompare.hx:391: lines 391-397
		$_g27 = $all_cols1->length;
		#coopy/SqlCompare.hx:391: lines 391-397
		while ($_g117 < $_g27) {
			#coopy/SqlCompare.hx:391: lines 391-397
			$_g117 = $_g117 + 1;
			#coopy/SqlCompare.hx:391: characters 14-15
			$i17 = $_g117 - 1;
			#coopy/SqlCompare.hx:392: characters 13-54
			if ($sql_dbl_cols !== "") {
				#coopy/SqlCompare.hx:392: characters 35-54
				$sql_dbl_cols = ($sql_dbl_cols??'null') . ",";
			}
			#coopy/SqlCompare.hx:393: characters 13-47
			$buf = "__coopy_" . ($i17??'null');
			#coopy/SqlCompare.hx:394: characters 13-71
			$n6 = $common->getQuotedColumnName(($all_cols1->arr[$i17] ?? null));
			#coopy/SqlCompare.hx:395: characters 13-64
			$sql_dbl_cols = ($sql_dbl_cols??'null') . ((($sql_table1??'null') . "." . ($n6??'null') . " AS " . ($buf??'null'))??'null');
			#coopy/SqlCompare.hx:396: characters 13-31
			$dbl_cols->arr[$dbl_cols->length] = $buf;
			#coopy/SqlCompare.hx:396: characters 13-31
			++$dbl_cols->length;

		}

		#coopy/SqlCompare.hx:398: lines 398-404
		$_g118 = 0;
		#coopy/SqlCompare.hx:398: lines 398-404
		$_g28 = $all_cols2->length;
		#coopy/SqlCompare.hx:398: lines 398-404
		while ($_g118 < $_g28) {
			#coopy/SqlCompare.hx:398: lines 398-404
			$_g118 = $_g118 + 1;
			#coopy/SqlCompare.hx:398: characters 14-15
			$i18 = $_g118 - 1;
			#coopy/SqlCompare.hx:399: characters 13-54
			if ($sql_dbl_cols !== "") {
				#coopy/SqlCompare.hx:399: characters 35-54
				$sql_dbl_cols = ($sql_dbl_cols??'null') . ",";
			}
			#coopy/SqlCompare.hx:400: characters 13-53
			$buf1 = "__coopy_" . ($i18??'null') . "b";
			#coopy/SqlCompare.hx:401: characters 13-71
			$n7 = $common->getQuotedColumnName(($all_cols2->arr[$i18] ?? null));
			#coopy/SqlCompare.hx:402: characters 13-64
			$sql_dbl_cols = ($sql_dbl_cols??'null') . ((($sql_table2??'null') . "." . ($n7??'null') . " AS " . ($buf1??'null'))??'null');
			#coopy/SqlCompare.hx:403: characters 13-31
			$dbl_cols->arr[$dbl_cols->length] = $buf1;
			#coopy/SqlCompare.hx:403: characters 13-31
			++$dbl_cols->length;

		}

		#coopy/SqlCompare.hx:405: lines 405-413
		if ($this->alt !== null) {
			#coopy/SqlCompare.hx:406: lines 406-412
			$_g119 = 0;
			#coopy/SqlCompare.hx:406: lines 406-412
			$_g29 = $all_cols3->length;
			#coopy/SqlCompare.hx:406: lines 406-412
			while ($_g119 < $_g29) {
				#coopy/SqlCompare.hx:406: lines 406-412
				$_g119 = $_g119 + 1;
				#coopy/SqlCompare.hx:406: characters 18-19
				$i19 = $_g119 - 1;
				#coopy/SqlCompare.hx:407: characters 17-58
				if ($sql_dbl_cols !== "") {
					#coopy/SqlCompare.hx:407: characters 39-58
					$sql_dbl_cols = ($sql_dbl_cols??'null') . ",";
				}
				#coopy/SqlCompare.hx:408: characters 17-57
				$buf2 = "__coopy_" . ($i19??'null') . "c";
				#coopy/SqlCompare.hx:409: characters 17-75
				$n8 = $common->getQuotedColumnName(($all_cols3->arr[$i19] ?? null));
				#coopy/SqlCompare.hx:410: characters 17-68
				$sql_dbl_cols = ($sql_dbl_cols??'null') . ((($sql_table3??'null') . "." . ($n8??'null') . " AS " . ($buf2??'null'))??'null');
				#coopy/SqlCompare.hx:411: characters 17-35
				$dbl_cols->arr[$dbl_cols->length] = $buf2;
				#coopy/SqlCompare.hx:411: characters 17-35
				++$dbl_cols->length;

			}
		}
		#coopy/SqlCompare.hx:414: characters 9-36
		$sql_order = "";
		#coopy/SqlCompare.hx:415: lines 415-419
		$_g120 = 0;
		#coopy/SqlCompare.hx:415: lines 415-419
		$_g30 = $key_cols->length;
		#coopy/SqlCompare.hx:415: lines 415-419
		while ($_g120 < $_g30) {
			#coopy/SqlCompare.hx:415: lines 415-419
			$_g120 = $_g120 + 1;
			#coopy/SqlCompare.hx:415: characters 14-15
			$i20 = $_g120 - 1;
			#coopy/SqlCompare.hx:416: characters 13-38
			if ($i20 > 0) {
				#coopy/SqlCompare.hx:416: characters 22-38
				$sql_order = ($sql_order??'null') . ",";
			}
			#coopy/SqlCompare.hx:417: characters 13-70
			$n9 = $common->getQuotedColumnName(($key_cols->arr[$i20] ?? null));
			#coopy/SqlCompare.hx:418: characters 13-27
			$sql_order = ($sql_order??'null') . ($n9??'null');
		}

		#coopy/SqlCompare.hx:421: characters 9-35
		$rowid = "-3";
		#coopy/SqlCompare.hx:422: characters 9-36
		$rowid1 = "-3";
		#coopy/SqlCompare.hx:423: characters 9-36
		$rowid2 = "-3";
		#coopy/SqlCompare.hx:424: characters 9-36
		$rowid3 = "-3";
		#coopy/SqlCompare.hx:425: lines 425-436
		if ($rowid_name !== null) {
			#coopy/SqlCompare.hx:426: characters 13-18
			$rowid = $rowid_name;
			#coopy/SqlCompare.hx:427: lines 427-429
			if ($this->local !== null) {
				#coopy/SqlCompare.hx:428: characters 17-23
				$rowid1 = ($sql_table1??'null') . "." . ($rowid_name??'null');
			}
			#coopy/SqlCompare.hx:430: lines 430-432
			if ($this->remote !== null) {
				#coopy/SqlCompare.hx:431: characters 17-23
				$rowid2 = ($sql_table2??'null') . "." . ($rowid_name??'null');
			}
			#coopy/SqlCompare.hx:433: lines 433-435
			if ($this->alt !== null) {
				#coopy/SqlCompare.hx:434: characters 17-23
				$rowid3 = ($sql_table3??'null') . "." . ($rowid_name??'null');
			}
		}
		#coopy/SqlCompare.hx:438: characters 9-12
		$this->at0 = 1;
		#coopy/SqlCompare.hx:439: characters 9-12
		$this->at1 = 1;
		#coopy/SqlCompare.hx:440: characters 9-12
		$this->at2 = 1;
		#coopy/SqlCompare.hx:441: characters 9-16
		$this->diff_ct = 0;
		#coopy/SqlCompare.hx:443: lines 443-450
		if ($this->remote !== null) {
			#coopy/SqlCompare.hx:444: characters 13-154
			$sql_inserts = "SELECT DISTINCT 0 AS __coopy_code, NULL, " . ($rowid??'null') . " AS rowid, NULL, " . ($sql_all_cols2??'null') . " FROM " . ($sql_table2??'null');
			#coopy/SqlCompare.hx:445: lines 445-447
			if ($this->local !== null) {
				#coopy/SqlCompare.hx:446: characters 17-110
				$sql_inserts = ($sql_inserts??'null') . ((" WHERE NOT EXISTS (SELECT 1 FROM " . ($sql_table1??'null') . ($this->where($sql_key_match2)??'null') . ")")??'null');
			}
			#coopy/SqlCompare.hx:448: characters 13-110
			$sql_inserts_order = (\Array_hx::wrap([
				"__coopy_code",
				"NULL",
				"rowid",
				"NULL",
			]))->concat($all_cols2);
			#coopy/SqlCompare.hx:449: characters 13-53
			$this->linkQuery($sql_inserts, $sql_inserts_order);
		}
		#coopy/SqlCompare.hx:452: lines 452-459
		if ($this->alt !== null) {
			#coopy/SqlCompare.hx:453: characters 13-154
			$sql_inserts1 = "SELECT DISTINCT 1 AS __coopy_code, NULL, NULL, " . ($rowid??'null') . " AS rowid, " . ($sql_all_cols3??'null') . " FROM " . ($sql_table3??'null');
			#coopy/SqlCompare.hx:454: lines 454-456
			if ($this->local !== null) {
				#coopy/SqlCompare.hx:455: characters 17-110
				$sql_inserts1 = ($sql_inserts1??'null') . ((" WHERE NOT EXISTS (SELECT 1 FROM " . ($sql_table1??'null') . ($this->where($sql_key_match3)??'null') . ")")??'null');
			}
			#coopy/SqlCompare.hx:457: characters 13-110
			$sql_inserts_order1 = (\Array_hx::wrap([
				"__coopy_code",
				"NULL",
				"NULL",
				"rowid",
			]))->concat($all_cols3);
			#coopy/SqlCompare.hx:458: characters 13-53
			$this->linkQuery($sql_inserts1, $sql_inserts_order1);
		}
		#coopy/SqlCompare.hx:461: lines 461-478
		if (($this->local !== null) && ($this->remote !== null)) {
			#coopy/SqlCompare.hx:462: characters 13-146
			$sql_updates = "SELECT DISTINCT 2 AS __coopy_code, " . ($rowid1??'null') . " AS __coopy_rowid0, " . ($rowid2??'null') . " AS __coopy_rowid1, ";
			#coopy/SqlCompare.hx:463: lines 463-467
			if ($this->alt !== null) {
				#coopy/SqlCompare.hx:464: characters 17-62
				$sql_updates = ($sql_updates??'null') . ((($rowid3??'null') . " AS __coopy_rowid2,")??'null');
			} else {
				#coopy/SqlCompare.hx:466: characters 17-40
				$sql_updates = ($sql_updates??'null') . " NULL,";
			}
			#coopy/SqlCompare.hx:468: characters 13-64
			$sql_updates = ($sql_updates??'null') . ((($sql_dbl_cols??'null') . " FROM " . ($sql_table1??'null'))??'null');
			#coopy/SqlCompare.hx:469: lines 469-471
			if ($sql_table1 !== $sql_table2) {
				#coopy/SqlCompare.hx:470: characters 17-85
				$sql_updates = ($sql_updates??'null') . ((" INNER JOIN " . ($sql_table2??'null') . " ON " . ($sql_key_match2??'null'))??'null');
			}
			#coopy/SqlCompare.hx:472: lines 472-474
			if (($this->alt !== null) && ($sql_table1 !== $sql_table3)) {
				#coopy/SqlCompare.hx:473: characters 17-85
				$sql_updates = ($sql_updates??'null') . ((" INNER JOIN " . ($sql_table3??'null') . " ON " . ($sql_key_match3??'null'))??'null');
			}
			#coopy/SqlCompare.hx:475: characters 13-52
			$sql_updates = ($sql_updates??'null') . ($this->where($sql_data_mismatch)??'null');
			#coopy/SqlCompare.hx:476: characters 13-138
			$sql_updates_order = (\Array_hx::wrap([
				"__coopy_code",
				"__coopy_rowid0",
				"__coopy_rowid1",
				"__coopy_rowid2",
			]))->concat($dbl_cols);
			#coopy/SqlCompare.hx:477: characters 13-53
			$this->linkQuery($sql_updates, $sql_updates_order);
		}
		#coopy/SqlCompare.hx:480: lines 480-489
		if ($this->alt === null) {
			#coopy/SqlCompare.hx:481: lines 481-488
			if ($this->local !== null) {
				#coopy/SqlCompare.hx:482: characters 17-158
				$sql_deletes = "SELECT DISTINCT 0 AS __coopy_code, " . ($rowid??'null') . " AS rowid, NULL, NULL, " . ($sql_all_cols1??'null') . " FROM " . ($sql_table1??'null');
				#coopy/SqlCompare.hx:483: lines 483-485
				if ($this->remote !== null) {
					#coopy/SqlCompare.hx:484: characters 21-114
					$sql_deletes = ($sql_deletes??'null') . ((" WHERE NOT EXISTS (SELECT 1 FROM " . ($sql_table2??'null') . ($this->where($sql_key_match2)??'null') . ")")??'null');
				}
				#coopy/SqlCompare.hx:486: characters 17-114
				$sql_deletes_order = (\Array_hx::wrap([
					"__coopy_code",
					"rowid",
					"NULL",
					"NULL",
				]))->concat($all_cols1);
				#coopy/SqlCompare.hx:487: characters 17-57
				$this->linkQuery($sql_deletes, $sql_deletes_order);
			}
		}
		#coopy/SqlCompare.hx:491: lines 491-504
		if ($this->alt !== null) {
			#coopy/SqlCompare.hx:493: characters 13-137
			$sql_deletes1 = "SELECT 2 AS __coopy_code, " . ($rowid1??'null') . " AS __coopy_rowid0, " . ($rowid2??'null') . " AS __coopy_rowid1, ";
			#coopy/SqlCompare.hx:494: characters 13-59
			$sql_deletes1 = ($sql_deletes1??'null') . ((($rowid3??'null') . " AS __coopy_rowid2, ")??'null');
			#coopy/SqlCompare.hx:495: characters 13-40
			$sql_deletes1 = ($sql_deletes1??'null') . ($sql_dbl_cols??'null');
			#coopy/SqlCompare.hx:496: characters 13-49
			$sql_deletes1 = ($sql_deletes1??'null') . ((" FROM " . ($sql_table1??'null'))??'null');
			#coopy/SqlCompare.hx:497: lines 497-499
			if ($this->remote !== null) {
				#coopy/SqlCompare.hx:498: characters 17-90
				$sql_deletes1 = ($sql_deletes1??'null') . ((" LEFT OUTER JOIN " . ($sql_table2??'null') . " ON " . ($sql_key_match2??'null'))??'null');
			}
			#coopy/SqlCompare.hx:500: characters 13-86
			$sql_deletes1 = ($sql_deletes1??'null') . ((" LEFT OUTER JOIN " . ($sql_table3??'null') . " ON " . ($sql_key_match3??'null'))??'null');
			#coopy/SqlCompare.hx:501: characters 13-85
			$sql_deletes1 = ($sql_deletes1??'null') . " WHERE __coopy_rowid1 IS NULL OR __coopy_rowid2 IS NULL";
			#coopy/SqlCompare.hx:502: characters 13-138
			$sql_deletes_order1 = (\Array_hx::wrap([
				"__coopy_code",
				"__coopy_rowid0",
				"__coopy_rowid1",
				"__coopy_rowid2",
			]))->concat($dbl_cols);
			#coopy/SqlCompare.hx:503: characters 13-53
			$this->linkQuery($sql_deletes1, $sql_deletes_order1);
		}
		#coopy/SqlCompare.hx:506: lines 506-508
		if ($this->diff_ct === 0) {
			#coopy/SqlCompare.hx:507: characters 13-34
			$this->align->markIdentical();
		}
		#coopy/SqlCompare.hx:510: characters 9-21
		return $this->align;
	}


	/**
	 * @param int $x
	 * 
	 * @return int
	 */
	public function denull ($x) {
		#coopy/SqlCompare.hx:106: characters 9-31
		if ($x === null) {
			#coopy/SqlCompare.hx:106: characters 22-31
			return -1;
		}
		#coopy/SqlCompare.hx:107: characters 9-17
		return $x;
	}


	/**
	 * @param \Array_hx $a1
	 * @param \Array_hx $a2
	 * 
	 * @return bool
	 */
	public function equalArray ($a1, $a2) {
		#coopy/SqlCompare.hx:52: characters 9-47
		if ($a1->length !== $a2->length) {
			#coopy/SqlCompare.hx:52: characters 35-47
			return false;
		}
		#coopy/SqlCompare.hx:53: lines 53-55
		$_g1 = 0;
		#coopy/SqlCompare.hx:53: lines 53-55
		$_g = $a1->length;
		#coopy/SqlCompare.hx:53: lines 53-55
		while ($_g1 < $_g) {
			#coopy/SqlCompare.hx:53: lines 53-55
			$_g1 = $_g1 + 1;
			#coopy/SqlCompare.hx:53: characters 14-15
			$i = $_g1 - 1;
			#coopy/SqlCompare.hx:54: characters 13-43
			if (($a1->arr[$i] ?? null) !== ($a2->arr[$i] ?? null)) {
				#coopy/SqlCompare.hx:54: characters 31-43
				return false;
			}
		}

		#coopy/SqlCompare.hx:56: characters 9-20
		return true;
	}


	/**
	 * @return void
	 */
	public function link () {
		#coopy/SqlCompare.hx:111: characters 9-18
		$this->diff_ct++;
		#coopy/SqlCompare.hx:112: characters 9-36
		$mode = $this->db->get(0);
		#coopy/SqlCompare.hx:113: characters 9-36
		$i0 = $this->denull($this->db->get(1));
		#coopy/SqlCompare.hx:114: characters 9-36
		$i1 = $this->denull($this->db->get(2));
		#coopy/SqlCompare.hx:115: characters 9-36
		$i2 = $this->denull($this->db->get(3));
		#coopy/SqlCompare.hx:116: lines 116-119
		if ($i0 === -3) {
			#coopy/SqlCompare.hx:117: characters 13-21
			$i0 = $this->at0;
			#coopy/SqlCompare.hx:118: characters 13-18
			$this->at0++;
		}
		#coopy/SqlCompare.hx:120: lines 120-123
		if ($i1 === -3) {
			#coopy/SqlCompare.hx:121: characters 13-21
			$i1 = $this->at1;
			#coopy/SqlCompare.hx:122: characters 13-18
			$this->at1++;
		}
		#coopy/SqlCompare.hx:124: lines 124-127
		if ($i2 === -3) {
			#coopy/SqlCompare.hx:125: characters 13-21
			$i2 = $this->at2;
			#coopy/SqlCompare.hx:126: characters 13-18
			$this->at2++;
		}
		#coopy/SqlCompare.hx:128: characters 9-24
		$offset = 4;
		#coopy/SqlCompare.hx:129: lines 129-134
		if ($i0 >= 0) {
			#coopy/SqlCompare.hx:130: lines 130-132
			$_g1 = 0;
			#coopy/SqlCompare.hx:130: lines 130-132
			$_g = $this->local->get_width();
			#coopy/SqlCompare.hx:130: lines 130-132
			while ($_g1 < $_g) {
				#coopy/SqlCompare.hx:130: lines 130-132
				$_g1 = $_g1 + 1;
				#coopy/SqlCompare.hx:130: characters 18-19
				$x = $_g1 - 1;
				#coopy/SqlCompare.hx:131: characters 17-58
				$this->local->setCellCache($x, $i0, $this->db->get($x + $offset));
			}

			#coopy/SqlCompare.hx:133: characters 13-34
			$offset = $offset + $this->local->get_width();
		}
		#coopy/SqlCompare.hx:135: lines 135-140
		if ($i1 >= 0) {
			#coopy/SqlCompare.hx:136: lines 136-138
			$_g11 = 0;
			#coopy/SqlCompare.hx:136: lines 136-138
			$_g2 = $this->remote->get_width();
			#coopy/SqlCompare.hx:136: lines 136-138
			while ($_g11 < $_g2) {
				#coopy/SqlCompare.hx:136: lines 136-138
				$_g11 = $_g11 + 1;
				#coopy/SqlCompare.hx:136: characters 18-19
				$x1 = $_g11 - 1;
				#coopy/SqlCompare.hx:137: characters 17-59
				$this->remote->setCellCache($x1, $i1, $this->db->get($x1 + $offset));
			}

			#coopy/SqlCompare.hx:139: characters 13-35
			$offset = $offset + $this->remote->get_width();
		}
		#coopy/SqlCompare.hx:141: lines 141-145
		if ($i2 >= 0) {
			#coopy/SqlCompare.hx:142: lines 142-144
			$_g12 = 0;
			#coopy/SqlCompare.hx:142: lines 142-144
			$_g3 = $this->alt->get_width();
			#coopy/SqlCompare.hx:142: lines 142-144
			while ($_g12 < $_g3) {
				#coopy/SqlCompare.hx:142: lines 142-144
				$_g12 = $_g12 + 1;
				#coopy/SqlCompare.hx:142: characters 18-19
				$x2 = $_g12 - 1;
				#coopy/SqlCompare.hx:143: characters 17-56
				$this->alt->setCellCache($x2, $i2, $this->db->get($x2 + $offset));
			}
		}
		#coopy/SqlCompare.hx:146: lines 146-149
		if (($mode === 0) || ($mode === 2)) {
			#coopy/SqlCompare.hx:147: characters 13-30
			$this->align->link($i0, $i1);
			#coopy/SqlCompare.hx:148: characters 13-36
			$this->align->addToOrder($i0, $i1);
		}
		#coopy/SqlCompare.hx:150: lines 150-155
		if ($this->alt !== null) {
			#coopy/SqlCompare.hx:151: lines 151-154
			if (($mode === 1) || ($mode === 2)) {
				#coopy/SqlCompare.hx:152: characters 17-44
				$this->align->reference->link($i0, $i2);
				#coopy/SqlCompare.hx:153: characters 17-50
				$this->align->reference->addToOrder($i0, $i2);
			}
		}
	}


	/**
	 * @param string $query
	 * @param \Array_hx $order
	 * 
	 * @return void
	 */
	public function linkQuery ($query, $order) {
		#coopy/SqlCompare.hx:159: lines 159-164
		if ($this->db->begin($query, null, $order)) {
			#coopy/SqlCompare.hx:160: lines 160-162
			while ($this->db->read()) {
				#coopy/SqlCompare.hx:161: characters 17-23
				$this->link();
			}
			#coopy/SqlCompare.hx:163: characters 13-21
			$this->db->end();
		}
	}


	/**
	 * @param \Array_hx $all_cols1
	 * @param \Array_hx $all_cols2
	 * @param \Array_hx $key_cols
	 * @param StringMap $present1
	 * @param StringMap $present2
	 * @param Alignment $align
	 * 
	 * @return void
	 */
	public function scanColumns ($all_cols1, $all_cols2, $key_cols, $present1, $present2, $align) {
		#coopy/SqlCompare.hx:178: characters 9-37
		$align->meta = new Alignment();
		#coopy/SqlCompare.hx:179: lines 179-186
		$_g1 = 0;
		#coopy/SqlCompare.hx:179: lines 179-186
		$_g = $all_cols1->length;
		#coopy/SqlCompare.hx:179: lines 179-186
		while ($_g1 < $_g) {
			#coopy/SqlCompare.hx:179: lines 179-186
			$_g1 = $_g1 + 1;
			#coopy/SqlCompare.hx:179: characters 14-15
			$i = $_g1 - 1;
			#coopy/SqlCompare.hx:180: characters 13-36
			$key = ($all_cols1->arr[$i] ?? null);
			#coopy/SqlCompare.hx:181: lines 181-185
			if (array_key_exists($key, $present2->data)) {
				#coopy/SqlCompare.hx:182: characters 17-53
				$align->meta->link($i, ($present2->data[$key] ?? null));
			} else {
				#coopy/SqlCompare.hx:184: characters 17-38
				$align->meta->link($i, -1);
			}
		}

		#coopy/SqlCompare.hx:187: lines 187-192
		$_g11 = 0;
		#coopy/SqlCompare.hx:187: lines 187-192
		$_g2 = $all_cols2->length;
		#coopy/SqlCompare.hx:187: lines 187-192
		while ($_g11 < $_g2) {
			#coopy/SqlCompare.hx:187: lines 187-192
			$_g11 = $_g11 + 1;
			#coopy/SqlCompare.hx:187: characters 14-15
			$i1 = $_g11 - 1;
			#coopy/SqlCompare.hx:188: characters 13-36
			$key1 = ($all_cols2->arr[$i1] ?? null);
			#coopy/SqlCompare.hx:189: lines 189-191
			if (!array_key_exists($key1, $present1->data)) {
				#coopy/SqlCompare.hx:190: characters 17-38
				$align->meta->link(-1, $i1);
			}
		}

		#coopy/SqlCompare.hx:193: characters 9-60
		$align->meta->range($all_cols1->length, $all_cols2->length);
		#coopy/SqlCompare.hx:194: lines 194-197
		$_g3 = 0;
		#coopy/SqlCompare.hx:194: lines 194-197
		while ($_g3 < $key_cols->length) {
			#coopy/SqlCompare.hx:194: characters 14-17
			$key2 = ($key_cols->arr[$_g3] ?? null);
			#coopy/SqlCompare.hx:194: lines 194-197
			$_g3 = $_g3 + 1;
			#coopy/SqlCompare.hx:195: characters 33-50
			$unit = ($present1->data[$key2] ?? null);
			#coopy/SqlCompare.hx:195: characters 13-70
			$unit1 = new Unit($unit, ($present2->data[$key2] ?? null));
			#coopy/SqlCompare.hx:196: characters 13-40
			$align->addIndexColumns($unit1);
		}

	}


	/**
	 * @return bool
	 */
	public function validateSchema () {
		#coopy/SqlCompare.hx:60: characters 9-28
		$all_cols1 = new \Array_hx();
		#coopy/SqlCompare.hx:61: characters 9-28
		$key_cols1 = new \Array_hx();
		#coopy/SqlCompare.hx:62: characters 9-34
		$access_error = false;
		#coopy/SqlCompare.hx:63: characters 9-32
		$pk_missing = false;
		#coopy/SqlCompare.hx:64: lines 64-69
		if ($this->local !== null) {
			#coopy/SqlCompare.hx:65: characters 13-47
			$all_cols1 = $this->local->getColumnNames();
			#coopy/SqlCompare.hx:66: characters 13-46
			$key_cols1 = $this->local->getPrimaryKey();
			#coopy/SqlCompare.hx:67: characters 13-57
			if ($all_cols1->length === 0) {
				#coopy/SqlCompare.hx:67: characters 38-57
				$access_error = true;
			}
			#coopy/SqlCompare.hx:68: characters 13-55
			if ($key_cols1->length === 0) {
				#coopy/SqlCompare.hx:68: characters 38-55
				$pk_missing = true;
			}
		}
		#coopy/SqlCompare.hx:70: characters 9-28
		$all_cols2 = new \Array_hx();
		#coopy/SqlCompare.hx:71: characters 9-28
		$key_cols2 = new \Array_hx();
		#coopy/SqlCompare.hx:72: lines 72-77
		if ($this->remote !== null) {
			#coopy/SqlCompare.hx:73: characters 13-48
			$all_cols2 = $this->remote->getColumnNames();
			#coopy/SqlCompare.hx:74: characters 13-47
			$key_cols2 = $this->remote->getPrimaryKey();
			#coopy/SqlCompare.hx:75: characters 13-57
			if ($all_cols2->length === 0) {
				#coopy/SqlCompare.hx:75: characters 38-57
				$access_error = true;
			}
			#coopy/SqlCompare.hx:76: characters 13-55
			if ($key_cols2->length === 0) {
				#coopy/SqlCompare.hx:76: characters 38-55
				$pk_missing = true;
			}
		}
		#coopy/SqlCompare.hx:78: characters 9-35
		$all_cols3 = $all_cols2;
		#coopy/SqlCompare.hx:79: characters 9-35
		$key_cols3 = $key_cols2;
		#coopy/SqlCompare.hx:80: lines 80-85
		if ($this->alt !== null) {
			#coopy/SqlCompare.hx:81: characters 13-45
			$all_cols3 = $this->alt->getColumnNames();
			#coopy/SqlCompare.hx:82: characters 13-44
			$key_cols3 = $this->alt->getPrimaryKey();
			#coopy/SqlCompare.hx:83: characters 13-57
			if ($all_cols3->length === 0) {
				#coopy/SqlCompare.hx:83: characters 38-57
				$access_error = true;
			}
			#coopy/SqlCompare.hx:84: characters 13-55
			if ($key_cols3->length === 0) {
				#coopy/SqlCompare.hx:84: characters 38-55
				$pk_missing = true;
			}
		}
		#coopy/SqlCompare.hx:86: lines 86-88
		if ($access_error) {
			#coopy/SqlCompare.hx:87: characters 13-18
			throw new HxException("Error accessing SQL table");
		}
		#coopy/SqlCompare.hx:89: lines 89-91
		if ($pk_missing) {
			#coopy/SqlCompare.hx:90: characters 13-18
			throw new HxException("sql diff not possible when primary key not available");
		}
		#coopy/SqlCompare.hx:92: characters 9-31
		$pk_change = false;
		#coopy/SqlCompare.hx:93: lines 93-95
		if (($this->local !== null) && ($this->remote !== null)) {
			#coopy/SqlCompare.hx:94: characters 13-67
			if (!$this->equalArray($key_cols1, $key_cols2)) {
				#coopy/SqlCompare.hx:94: characters 51-67
				$pk_change = true;
			}
		}
		#coopy/SqlCompare.hx:96: lines 96-98
		if (($this->local !== null) && ($this->alt !== null)) {
			#coopy/SqlCompare.hx:97: characters 13-67
			if (!$this->equalArray($key_cols1, $key_cols3)) {
				#coopy/SqlCompare.hx:97: characters 51-67
				$pk_change = true;
			}
		}
		#coopy/SqlCompare.hx:99: lines 99-101
		if ($pk_change) {
			#coopy/SqlCompare.hx:100: characters 13-18
			throw new HxException("sql diff not possible when primary key changes");
		}
		#coopy/SqlCompare.hx:102: characters 9-20
		return true;
	}


	/**
	 * @param string $txt
	 * 
	 * @return string
	 */
	public function where ($txt) {
		#coopy/SqlCompare.hx:168: characters 9-43
		if ($txt === "") {
			#coopy/SqlCompare.hx:168: characters 22-43
			return " WHERE 1 = 0";
		}
		#coopy/SqlCompare.hx:169: characters 9-31
		return " WHERE " . ($txt??'null');
	}
}


Boot::registerClass(SqlCompare::class, 'coopy.SqlCompare');
