<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ 3988422)
 */

use \php\_Boot\HxClosure;
use \haxe\io\Output;
use \php\Boot;
use \php\_Boot\HxString;
use \sys\io\FileOutput;

class Sys {
	/**
	 * @return \Array_hx
	 */
	static public function args () {
		#/usr/local/lib/haxe/std/php/_std/Sys.hx:40: lines 40-44
		if (array_key_exists("argv", $_SERVER)) {
			#/usr/local/lib/haxe/std/php/_std/Sys.hx:41: characters 4-89
			return \Array_hx::wrap(array_slice($_SERVER["argv"], 1));
		} else {
			#/usr/local/lib/haxe/std/php/_std/Sys.hx:43: characters 4-13
			return new \Array_hx();
		}
	}


	/**
	 * @param string $cmd
	 * @param \Array_hx $args
	 * 
	 * @return int
	 */
	static public function command ($cmd, $args = null) {
		#/usr/local/lib/haxe/std/php/_std/Sys.hx:83: lines 83-93
		if ($args !== null) {
			#/usr/local/lib/haxe/std/php/_std/Sys.hx:84: characters 12-24
			$_g = Sys::systemName();
			#/usr/local/lib/haxe/std/php/_std/Sys.hx:84: characters 12-24
			if ($_g === "Windows") {
				#/usr/local/lib/haxe/std/php/_std/Sys.hx:86: lines 86-89
				$_g1 = new \Array_hx();
				#/usr/local/lib/haxe/std/php/_std/Sys.hx:87: lines 87-88
				$_g11 = 0;
				#/usr/local/lib/haxe/std/php/_std/Sys.hx:87: lines 87-88
				$_g2 = (\Array_hx::wrap([\StringTools::replace($cmd, "/", "\\")]))->concat($args);
				#/usr/local/lib/haxe/std/php/_std/Sys.hx:87: lines 87-88
				while ($_g11 < $_g2->length) {
					#/usr/local/lib/haxe/std/php/_std/Sys.hx:87: characters 12-13
					$a = ($_g2->arr[$_g11] ?? null);
					#/usr/local/lib/haxe/std/php/_std/Sys.hx:87: lines 87-88
					$_g11 = $_g11 + 1;
					#/usr/local/lib/haxe/std/php/_std/Sys.hx:88: characters 7-39
					$x = \StringTools::quoteWinArg($a, true);
					#/usr/local/lib/haxe/std/php/_std/Sys.hx:88: characters 7-39
					$_g1->arr[$_g1->length] = $x;
					#/usr/local/lib/haxe/std/php/_std/Sys.hx:88: characters 7-39
					++$_g1->length;

				}

				#/usr/local/lib/haxe/std/php/_std/Sys.hx:86: lines 86-89
				$cmd = $_g1->join(" ");
			} else {
				#/usr/local/lib/haxe/std/php/_std/Sys.hx:91: characters 12-60
				$_this = (\Array_hx::wrap([$cmd]))->concat($args);
				#/usr/local/lib/haxe/std/php/_std/Sys.hx:91: characters 12-60
				$f = new HxClosure(\StringTools::class, 'quoteUnixArg');
				#/usr/local/lib/haxe/std/php/_std/Sys.hx:91: characters 12-60
				$result = [];
				#/usr/local/lib/haxe/std/php/_std/Sys.hx:91: characters 12-60
				$_g12 = 0;
				#/usr/local/lib/haxe/std/php/_std/Sys.hx:91: characters 12-60
				$_g3 = $_this->length;
				#/usr/local/lib/haxe/std/php/_std/Sys.hx:91: characters 12-60
				while ($_g12 < $_g3) {
					#/usr/local/lib/haxe/std/php/_std/Sys.hx:91: characters 12-60
					$_g12 = $_g12 + 1;
					#/usr/local/lib/haxe/std/php/_std/Sys.hx:91: characters 12-60
					$i = $_g12 - 1;
					#/usr/local/lib/haxe/std/php/_std/Sys.hx:91: characters 12-60
					$result[] = $f($_this->arr[$i]);
				}

				#/usr/local/lib/haxe/std/php/_std/Sys.hx:91: characters 6-70
				$cmd = \Array_hx::wrap($result)->join(" ");
			}
		}
		#/usr/local/lib/haxe/std/php/_std/Sys.hx:94: characters 3-30
		$result1 = Boot::deref(0);
		#/usr/local/lib/haxe/std/php/_std/Sys.hx:95: characters 3-29
		system($cmd, $result1);
		#/usr/local/lib/haxe/std/php/_std/Sys.hx:96: characters 3-16
		return $result1;
	}


	/**
	 * @param string $s
	 * 
	 * @return string
	 */
	static public function getEnv ($s) {
		#/usr/local/lib/haxe/std/php/_std/Sys.hx:48: characters 3-32
		$value = getenv($s);
		#/usr/local/lib/haxe/std/php/_std/Sys.hx:49: characters 10-39
		if ($value === false) {
			#/usr/local/lib/haxe/std/php/_std/Sys.hx:49: characters 27-31
			return null;
		} else {
			#/usr/local/lib/haxe/std/php/_std/Sys.hx:49: characters 34-39
			return $value;
		}
	}


	/**
	 * @return Output
	 */
	static public function stderr () {
		#/usr/local/lib/haxe/std/php/_std/Sys.hx:140: characters 3-87
		$p = (defined("STDERR") ? STDERR : fopen("php://stderr", "w"));
		#/usr/local/lib/haxe/std/php/_std/Sys.hx:141: characters 3-43
		return new FileOutput($p);
	}


	/**
	 * @return Output
	 */
	static public function stdout () {
		#/usr/local/lib/haxe/std/php/_std/Sys.hx:135: characters 3-87
		$p = (defined("STDOUT") ? STDOUT : fopen("php://stdout", "w"));
		#/usr/local/lib/haxe/std/php/_std/Sys.hx:136: characters 3-43
		return new FileOutput($p);
	}


	/**
	 * @return string
	 */
	static public function systemName () {
		#/usr/local/lib/haxe/std/php/_std/Sys.hx:77: characters 3-33
		$s = php_uname("s");
		#/usr/local/lib/haxe/std/php/_std/Sys.hx:78: characters 3-26
		$p = HxString::indexOf($s, " ");
		#/usr/local/lib/haxe/std/php/_std/Sys.hx:79: characters 10-39
		if ($p >= 0) {
			#/usr/local/lib/haxe/std/php/_std/Sys.hx:79: characters 20-34
			return HxString::substr($s, 0, $p);
		} else {
			#/usr/local/lib/haxe/std/php/_std/Sys.hx:79: characters 37-38
			return $s;
		}
	}
}


Boot::registerClass(Sys::class, 'Sys');
